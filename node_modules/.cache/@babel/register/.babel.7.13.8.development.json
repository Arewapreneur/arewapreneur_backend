{
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const path = require('path');\n\nconst dotenv = require('dotenv');\n\nconst server = require('./server');\n\nconst configFile = path.join(__dirname, '../.env');\ndotenv.config({\n  path: configFile\n});\n\nconst runServer = async () => {\n  const PORT = process.env.PORT || 5000;\n  server.listen(PORT, () => {\n    console.log(`server started on /:${PORT}`);\n  });\n};\n\nrunServer();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBhdGgiLCJyZXF1aXJlIiwiZG90ZW52Iiwic2VydmVyIiwiY29uZmlnRmlsZSIsImpvaW4iLCJfX2Rpcm5hbWUiLCJjb25maWciLCJydW5TZXJ2ZXIiLCJQT1JUIiwicHJvY2VzcyIsImVudiIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFDQSxNQUFNRSxNQUFNLEdBQUdGLE9BQU8sQ0FBQyxVQUFELENBQXRCOztBQUNBLE1BQU1HLFVBQVUsR0FBR0osSUFBSSxDQUFDSyxJQUFMLENBQVVDLFNBQVYsRUFBcUIsU0FBckIsQ0FBbkI7QUFDQUosTUFBTSxDQUFDSyxNQUFQLENBQWM7QUFBRVAsRUFBQUEsSUFBSSxFQUFFSTtBQUFSLENBQWQ7O0FBRUEsTUFBTUksU0FBUyxHQUFHLFlBQVk7QUFDNUIsUUFBTUMsSUFBSSxHQUFHQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsSUFBWixJQUFvQixJQUFqQztBQUNBTixFQUFBQSxNQUFNLENBQUNTLE1BQVAsQ0FBY0gsSUFBZCxFQUFvQixNQUFNO0FBQ3hCSSxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBYSx1QkFBc0JMLElBQUssRUFBeEM7QUFDRCxHQUZEO0FBR0QsQ0FMRDs7QUFPQUQsU0FBUyIsInNvdXJjZVJvb3QiOiIvaG9tZS96ZWVzb24vRG93bmxvYWRzL2Rldi9idm4tYXBpL2J2bi12ZXJpZmllci1zZXJ2ZXItYXBwLWpzL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpXG5jb25zdCBkb3RlbnYgPSByZXF1aXJlKCdkb3RlbnYnKVxuY29uc3Qgc2VydmVyID0gcmVxdWlyZSgnLi9zZXJ2ZXInKVxuY29uc3QgY29uZmlnRmlsZSA9IHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8uZW52Jyk7XG5kb3RlbnYuY29uZmlnKHsgcGF0aDogY29uZmlnRmlsZSB9KTtcblxuY29uc3QgcnVuU2VydmVyID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCBQT1JUID0gcHJvY2Vzcy5lbnYuUE9SVCB8fCA1MDAwO1xuICBzZXJ2ZXIubGlzdGVuKFBPUlQsICgpID0+IHtcbiAgICBjb25zb2xlLmxvZyhgc2VydmVyIHN0YXJ0ZWQgb24gLzoke1BPUlR9YCk7XG4gIH0pO1xufTtcblxucnVuU2VydmVyKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "path",
        "require",
        "dotenv",
        "server",
        "configFile",
        "join",
        "__dirname",
        "config",
        "runServer",
        "PORT",
        "process",
        "env",
        "listen",
        "console",
        "log"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,MAAM,GAAGF,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMG,UAAU,GAAGJ,IAAI,CAACK,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAAnB;AACAJ,MAAM,CAACK,MAAP,CAAc;AAAEP,EAAAA,IAAI,EAAEI;AAAR,CAAd;;AAEA,MAAMI,SAAS,GAAG,YAAY;AAC5B,QAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYF,IAAZ,IAAoB,IAAjC;AACAN,EAAAA,MAAM,CAACS,MAAP,CAAcH,IAAd,EAAoB,MAAM;AACxBI,IAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBL,IAAK,EAAxC;AACD,GAFD;AAGD,CALD;;AAOAD,SAAS",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/",
      "sourcesContent": [
        "const path = require('path')\nconst dotenv = require('dotenv')\nconst server = require('./server')\nconst configFile = path.join(__dirname, '../.env');\ndotenv.config({ path: configFile });\n\nconst runServer = async () => {\n  const PORT = process.env.PORT || 5000;\n  server.listen(PORT, () => {\n    console.log(`server started on /:${PORT}`);\n  });\n};\n\nrunServer();\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614880754047
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst morgan = require('morgan');\n\nconst cors = require('cors');\n\nconst endpoints = require('./endpoints');\n\nconst app = express(); // Add critical middleware\n\napp.use(cors());\napp.use(express.json());\napp.use(morgan('tiny'));\napp.use('/', endpoints.ping);\napp.use('/ping', endpoints.ping);\napp.use('/verify/bvn', endpoints.verifyBVN);\napp.use('/send/sms', endpoints.sendSMS); // Catch-all error handler\n\napp.use((err, req, res, next) => {\n  console.log(err.status, req.path, err.message);\n  res.status(err.status || 500).json({\n    message: err.message\n  });\n});\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsIm1vcmdhbiIsImNvcnMiLCJlbmRwb2ludHMiLCJhcHAiLCJ1c2UiLCJqc29uIiwicGluZyIsInZlcmlmeUJWTiIsInNlbmRTTVMiLCJlcnIiLCJyZXEiLCJyZXMiLCJuZXh0IiwiY29uc29sZSIsImxvZyIsInN0YXR1cyIsInBhdGgiLCJtZXNzYWdlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsT0FBTyxHQUFHQyxPQUFPLENBQUMsU0FBRCxDQUF2Qjs7QUFDQSxNQUFNQyxNQUFNLEdBQUdELE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUcsU0FBUyxHQUFHSCxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFFQSxNQUFNSSxHQUFHLEdBQUdMLE9BQU8sRUFBbkIsQyxDQUVBOztBQUNBSyxHQUFHLENBQUNDLEdBQUosQ0FBUUgsSUFBSSxFQUFaO0FBQ0FFLEdBQUcsQ0FBQ0MsR0FBSixDQUFRTixPQUFPLENBQUNPLElBQVIsRUFBUjtBQUNBRixHQUFHLENBQUNDLEdBQUosQ0FBUUosTUFBTSxDQUFDLE1BQUQsQ0FBZDtBQUVBRyxHQUFHLENBQUNDLEdBQUosQ0FBUSxHQUFSLEVBQWFGLFNBQVMsQ0FBQ0ksSUFBdkI7QUFDQUgsR0FBRyxDQUFDQyxHQUFKLENBQVEsT0FBUixFQUFpQkYsU0FBUyxDQUFDSSxJQUEzQjtBQUNBSCxHQUFHLENBQUNDLEdBQUosQ0FBUSxhQUFSLEVBQXVCRixTQUFTLENBQUNLLFNBQWpDO0FBQ0FKLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLFdBQVIsRUFBcUJGLFNBQVMsQ0FBQ00sT0FBL0IsRSxDQUVBOztBQUNBTCxHQUFHLENBQUNDLEdBQUosQ0FBUSxDQUFDSyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsR0FBWCxFQUFnQkMsSUFBaEIsS0FBeUI7QUFDL0JDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZTCxHQUFHLENBQUNNLE1BQWhCLEVBQXdCTCxHQUFHLENBQUNNLElBQTVCLEVBQWtDUCxHQUFHLENBQUNRLE9BQXRDO0FBQ0FOLEVBQUFBLEdBQUcsQ0FBQ0ksTUFBSixDQUFXTixHQUFHLENBQUNNLE1BQUosSUFBYyxHQUF6QixFQUE4QlYsSUFBOUIsQ0FBbUM7QUFDakNZLElBQUFBLE9BQU8sRUFBRVIsR0FBRyxDQUFDUTtBQURvQixHQUFuQztBQUdELENBTEQ7QUFPQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsR0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvemVlc29uL0Rvd25sb2Fkcy9kZXYvYnZuLWFwaS9idm4tdmVyaWZpZXItc2VydmVyLWFwcC1qcy9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZXhwcmVzcyA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IG1vcmdhbiA9IHJlcXVpcmUoJ21vcmdhbicpO1xuY29uc3QgY29ycyA9IHJlcXVpcmUoJ2NvcnMnKVxuY29uc3QgZW5kcG9pbnRzID0gcmVxdWlyZSgnLi9lbmRwb2ludHMnKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG4vLyBBZGQgY3JpdGljYWwgbWlkZGxld2FyZVxuYXBwLnVzZShjb3JzKCkpO1xuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKG1vcmdhbigndGlueScpKTtcblxuYXBwLnVzZSgnLycsIGVuZHBvaW50cy5waW5nKTtcbmFwcC51c2UoJy9waW5nJywgZW5kcG9pbnRzLnBpbmcpO1xuYXBwLnVzZSgnL3ZlcmlmeS9idm4nLCBlbmRwb2ludHMudmVyaWZ5QlZOKTtcbmFwcC51c2UoJy9zZW5kL3NtcycsIGVuZHBvaW50cy5zZW5kU01TKVxuXG4vLyBDYXRjaC1hbGwgZXJyb3IgaGFuZGxlclxuYXBwLnVzZSgoZXJyLCByZXEsIHJlcywgbmV4dCkgPT4ge1xuICBjb25zb2xlLmxvZyhlcnIuc3RhdHVzLCByZXEucGF0aCwgZXJyLm1lc3NhZ2UpO1xuICByZXMuc3RhdHVzKGVyci5zdGF0dXMgfHwgNTAwKS5qc29uKHtcbiAgICBtZXNzYWdlOiBlcnIubWVzc2FnZVxuICB9KTtcbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "require",
        "morgan",
        "cors",
        "endpoints",
        "app",
        "use",
        "json",
        "ping",
        "verifyBVN",
        "sendSMS",
        "err",
        "req",
        "res",
        "next",
        "console",
        "log",
        "status",
        "path",
        "message",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMG,SAAS,GAAGH,OAAO,CAAC,aAAD,CAAzB;;AAEA,MAAMI,GAAG,GAAGL,OAAO,EAAnB,C,CAEA;;AACAK,GAAG,CAACC,GAAJ,CAAQH,IAAI,EAAZ;AACAE,GAAG,CAACC,GAAJ,CAAQN,OAAO,CAACO,IAAR,EAAR;AACAF,GAAG,CAACC,GAAJ,CAAQJ,MAAM,CAAC,MAAD,CAAd;AAEAG,GAAG,CAACC,GAAJ,CAAQ,GAAR,EAAaF,SAAS,CAACI,IAAvB;AACAH,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBF,SAAS,CAACI,IAA3B;AACAH,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuBF,SAAS,CAACK,SAAjC;AACAJ,GAAG,CAACC,GAAJ,CAAQ,WAAR,EAAqBF,SAAS,CAACM,OAA/B,E,CAEA;;AACAL,GAAG,CAACC,GAAJ,CAAQ,CAACK,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACM,MAAhB,EAAwBL,GAAG,CAACM,IAA5B,EAAkCP,GAAG,CAACQ,OAAtC;AACAN,EAAAA,GAAG,CAACI,MAAJ,CAAWN,GAAG,CAACM,MAAJ,IAAc,GAAzB,EAA8BV,IAA9B,CAAmC;AACjCY,IAAAA,OAAO,EAAER,GAAG,CAACQ;AADoB,GAAnC;AAGD,CALD;AAOAC,MAAM,CAACC,OAAP,GAAiBhB,GAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/",
      "sourcesContent": [
        "const express = require('express');\nconst morgan = require('morgan');\nconst cors = require('cors')\nconst endpoints = require('./endpoints');\n\nconst app = express();\n\n// Add critical middleware\napp.use(cors());\napp.use(express.json());\napp.use(morgan('tiny'));\n\napp.use('/', endpoints.ping);\napp.use('/ping', endpoints.ping);\napp.use('/verify/bvn', endpoints.verifyBVN);\napp.use('/send/sms', endpoints.sendSMS)\n\n// Catch-all error handler\napp.use((err, req, res, next) => {\n  console.log(err.status, req.path, err.message);\n  res.status(err.status || 500).json({\n    message: err.message\n  });\n});\n\nmodule.exports = app;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614959928021
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const ping = require('./ping');\n\nconst verifyBVN = require('./verifyBVN');\n\nconst sendSMS = require('./sendSMS');\n\nmodule.exports = {\n  ping,\n  verifyBVN,\n  sendSMS\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBpbmciLCJyZXF1aXJlIiwidmVyaWZ5QlZOIiwic2VuZFNNUyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDLFFBQUQsQ0FBcEI7O0FBQ0EsTUFBTUMsU0FBUyxHQUFHRCxPQUFPLENBQUMsYUFBRCxDQUF6Qjs7QUFDQSxNQUFNRSxPQUFPLEdBQUdGLE9BQU8sQ0FBQyxXQUFELENBQXZCOztBQUVBRyxNQUFNLENBQUNDLE9BQVAsR0FBaUI7QUFDaEJMLEVBQUFBLElBRGdCO0FBRWhCRSxFQUFBQSxTQUZnQjtBQUdoQkMsRUFBQUE7QUFIZ0IsQ0FBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvemVlc29uL0Rvd25sb2Fkcy9kZXYvYnZuLWFwaS9idm4tdmVyaWZpZXItc2VydmVyLWFwcC1qcy9zcmMvZW5kcG9pbnRzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBpbmcgPSByZXF1aXJlKCcuL3BpbmcnKTtcbmNvbnN0IHZlcmlmeUJWTiA9IHJlcXVpcmUoJy4vdmVyaWZ5QlZOJyk7XG5jb25zdCBzZW5kU01TID0gcmVxdWlyZSgnLi9zZW5kU01TJylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gcGluZyxcbiB2ZXJpZnlCVk4sXG4gc2VuZFNNU1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "ping",
        "require",
        "verifyBVN",
        "sendSMS",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAD,CAApB;;AACA,MAAMC,SAAS,GAAGD,OAAO,CAAC,aAAD,CAAzB;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,WAAD,CAAvB;;AAEAG,MAAM,CAACC,OAAP,GAAiB;AAChBL,EAAAA,IADgB;AAEhBE,EAAAA,SAFgB;AAGhBC,EAAAA;AAHgB,CAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "sourcesContent": [
        "const ping = require('./ping');\nconst verifyBVN = require('./verifyBVN');\nconst sendSMS = require('./sendSMS')\n\nmodule.exports = {\n ping,\n verifyBVN,\n sendSMS\n};\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614960119939
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/ping.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/ping.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/ping.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/ping.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
        "sourceFileName": "ping.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nconst defaultResponse = `BVN Verifier: ${new Date()}`;\n\nconst defaultHandler = (req, res) => res.status(200).send({\n  message: defaultResponse\n}); // handle requests if no path or /ping was specified\n\n\nrouter.get('/', defaultHandler);\nrouter.post('/', defaultHandler);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBpbmcuanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsImRlZmF1bHRSZXNwb25zZSIsIkRhdGUiLCJkZWZhdWx0SGFuZGxlciIsInJlcSIsInJlcyIsInN0YXR1cyIsInNlbmQiLCJtZXNzYWdlIiwiZ2V0IiwicG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBUCxDQUFtQkMsTUFBbkIsRUFBZjs7QUFFQSxNQUFNQyxlQUFlLEdBQUksaUJBQWdCLElBQUlDLElBQUosRUFBVyxFQUFwRDs7QUFDQSxNQUFNQyxjQUFjLEdBQUcsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEtBQWNBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVDLEVBQUFBLE9BQU8sRUFBRVA7QUFBWCxDQUFyQixDQUFyQyxDLENBRUE7OztBQUNBSCxNQUFNLENBQUNXLEdBQVAsQ0FBVyxHQUFYLEVBQWdCTixjQUFoQjtBQUNBTCxNQUFNLENBQUNZLElBQVAsQ0FBWSxHQUFaLEVBQWlCUCxjQUFqQjtBQUVBUSxNQUFNLENBQUNDLE9BQVAsR0FBaUJkLE1BQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3plZXNvbi9Eb3dubG9hZHMvZGV2L2J2bi1hcGkvYnZuLXZlcmlmaWVyLXNlcnZlci1hcHAtanMvc3JjL2VuZHBvaW50cy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCByb3V0ZXIgPSByZXF1aXJlKCdleHByZXNzJykuUm91dGVyKCk7XG5cbmNvbnN0IGRlZmF1bHRSZXNwb25zZSA9IGBCVk4gVmVyaWZpZXI6ICR7bmV3IERhdGUoKX1gO1xuY29uc3QgZGVmYXVsdEhhbmRsZXIgPSAocmVxLCByZXMpID0+IHJlcy5zdGF0dXMoMjAwKS5zZW5kKHsgbWVzc2FnZTogZGVmYXVsdFJlc3BvbnNlIH0pO1xuXG4vLyBoYW5kbGUgcmVxdWVzdHMgaWYgbm8gcGF0aCBvciAvcGluZyB3YXMgc3BlY2lmaWVkXG5yb3V0ZXIuZ2V0KCcvJywgZGVmYXVsdEhhbmRsZXIpO1xucm91dGVyLnBvc3QoJy8nLCBkZWZhdWx0SGFuZGxlcik7XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGVyO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "ping.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "defaultResponse",
        "Date",
        "defaultHandler",
        "req",
        "res",
        "status",
        "send",
        "message",
        "get",
        "post",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AAEA,MAAMC,eAAe,GAAI,iBAAgB,IAAIC,IAAJ,EAAW,EAApD;;AACA,MAAMC,cAAc,GAAG,CAACC,GAAD,EAAMC,GAAN,KAAcA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,EAAAA,OAAO,EAAEP;AAAX,CAArB,CAArC,C,CAEA;;;AACAH,MAAM,CAACW,GAAP,CAAW,GAAX,EAAgBN,cAAhB;AACAL,MAAM,CAACY,IAAP,CAAY,GAAZ,EAAiBP,cAAjB;AAEAQ,MAAM,CAACC,OAAP,GAAiBd,MAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "sourcesContent": [
        "const router = require('express').Router();\n\nconst defaultResponse = `BVN Verifier: ${new Date()}`;\nconst defaultHandler = (req, res) => res.status(200).send({ message: defaultResponse });\n\n// handle requests if no path or /ping was specified\nrouter.get('/', defaultHandler);\nrouter.post('/', defaultHandler);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614935394811
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verify-bvn.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verify-bvn.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verify-bvn.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verify-bvn.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
        "sourceFileName": "verify-bvn.js"
      }
    },
    "ast": null,
    "code": "const router = require('express').Router();\n\nconst {\n  nibss\n} = require('innovation-sandbox');\n\nconst errors = require('../commons/errors/nibss-error');\n\nconst {\n  NIBSSError\n} = errors;\n\nconst handleVerificationReq = async (req, res) => {\n  // TODO validate the bvn input from the client\n  const {\n    bvn\n  } = req.body;\n\n  try {\n    // TODO use imported NIBSS SDK to verify the bvn input\n    let verification;\n    const message = verification ? 'verification completed' : `BVN ${bvn} could not be found / verified`;\n    return res.status(200).json({\n      message,\n      verification\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      message: 'Unable to handle your verification request. Pls try again or contact support'\n    });\n  }\n};\n\nrouter.post('/', handleVerificationReq);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmeS1idm4uanMiXSwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsIm5pYnNzIiwiZXJyb3JzIiwiTklCU1NFcnJvciIsImhhbmRsZVZlcmlmaWNhdGlvblJlcSIsInJlcSIsInJlcyIsImJ2biIsImJvZHkiLCJ2ZXJpZmljYXRpb24iLCJtZXNzYWdlIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwiY29uc29sZSIsImxvZyIsInBvc3QiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQVAsQ0FBbUJDLE1BQW5CLEVBQWY7O0FBQ0EsTUFBTTtBQUFFQyxFQUFBQTtBQUFGLElBQVlGLE9BQU8sQ0FBQyxvQkFBRCxDQUF6Qjs7QUFFQSxNQUFNRyxNQUFNLEdBQUdILE9BQU8sQ0FBQywrQkFBRCxDQUF0Qjs7QUFDQSxNQUFNO0FBQUVJLEVBQUFBO0FBQUYsSUFBaUJELE1BQXZCOztBQUVBLE1BQU1FLHFCQUFxQixHQUFHLE9BQU9DLEdBQVAsRUFBWUMsR0FBWixLQUFvQjtBQUNqRDtBQUNBLFFBQU07QUFBRUMsSUFBQUE7QUFBRixNQUFVRixHQUFHLENBQUNHLElBQXBCOztBQUVBLE1BQUk7QUFDRjtBQUNBLFFBQUlDLFlBQUo7QUFFQSxVQUFNQyxPQUFPLEdBQUdELFlBQVksR0FBRyx3QkFBSCxHQUErQixPQUFNRixHQUFJLGdDQUFyRTtBQUNBLFdBQU9ELEdBQUcsQ0FBQ0ssTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQzFCRixNQUFBQSxPQUQwQjtBQUUxQkQsTUFBQUE7QUFGMEIsS0FBckIsQ0FBUDtBQUlELEdBVEQsQ0FTRSxPQUFPSSxLQUFQLEVBQWM7QUFDZEMsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVlGLEtBQVo7QUFDQVAsSUFBQUEsR0FBRyxDQUFDSyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUI7QUFDbkJGLE1BQUFBLE9BQU8sRUFBRTtBQURVLEtBQXJCO0FBR0Q7QUFDRCxDQW5CRDs7QUFxQkFaLE1BQU0sQ0FBQ2tCLElBQVAsQ0FBWSxHQUFaLEVBQWlCWixxQkFBakI7QUFFQWEsTUFBTSxDQUFDQyxPQUFQLEdBQWlCcEIsTUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvemVlc29uL0Rvd25sb2Fkcy9kZXYvYnZuLWFwaS9idm4tdmVyaWZpZXItc2VydmVyLWFwcC1qcy9zcmMvZW5kcG9pbnRzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHJvdXRlciA9IHJlcXVpcmUoJ2V4cHJlc3MnKS5Sb3V0ZXIoKTtcbmNvbnN0IHsgbmlic3MgfSA9IHJlcXVpcmUoJ2lubm92YXRpb24tc2FuZGJveCcpO1xuXG5jb25zdCBlcnJvcnMgPSByZXF1aXJlKCcuLi9jb21tb25zL2Vycm9ycy9uaWJzcy1lcnJvcicpO1xuY29uc3QgeyBOSUJTU0Vycm9yIH0gPSBlcnJvcnM7XG5cbmNvbnN0IGhhbmRsZVZlcmlmaWNhdGlvblJlcSA9IGFzeW5jIChyZXEsIHJlcykgPT4ge1xuIC8vIFRPRE8gdmFsaWRhdGUgdGhlIGJ2biBpbnB1dCBmcm9tIHRoZSBjbGllbnRcbiBjb25zdCB7IGJ2biB9ID0gcmVxLmJvZHk7XG5cbiB0cnkge1xuICAgLy8gVE9ETyB1c2UgaW1wb3J0ZWQgTklCU1MgU0RLIHRvIHZlcmlmeSB0aGUgYnZuIGlucHV0XG4gICBsZXQgdmVyaWZpY2F0aW9uO1xuXG4gICBjb25zdCBtZXNzYWdlID0gdmVyaWZpY2F0aW9uID8gJ3ZlcmlmaWNhdGlvbiBjb21wbGV0ZWQnIDogYEJWTiAke2J2bn0gY291bGQgbm90IGJlIGZvdW5kIC8gdmVyaWZpZWRgO1xuICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgbWVzc2FnZSxcbiAgICAgdmVyaWZpY2F0aW9uXG4gICB9KTtcbiB9IGNhdGNoIChlcnJvcikge1xuICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICBtZXNzYWdlOiAnVW5hYmxlIHRvIGhhbmRsZSB5b3VyIHZlcmlmaWNhdGlvbiByZXF1ZXN0LiBQbHMgdHJ5IGFnYWluIG9yIGNvbnRhY3Qgc3VwcG9ydCdcbiAgIH0pO1xuIH1cbn07XG5cbnJvdXRlci5wb3N0KCcvJywgaGFuZGxlVmVyaWZpY2F0aW9uUmVxKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "verify-bvn.js"
      ],
      "names": [
        "router",
        "require",
        "Router",
        "nibss",
        "errors",
        "NIBSSError",
        "handleVerificationReq",
        "req",
        "res",
        "bvn",
        "body",
        "verification",
        "message",
        "status",
        "json",
        "error",
        "console",
        "log",
        "post",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBC,MAAnB,EAAf;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAYF,OAAO,CAAC,oBAAD,CAAzB;;AAEA,MAAMG,MAAM,GAAGH,OAAO,CAAC,+BAAD,CAAtB;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAiBD,MAAvB;;AAEA,MAAME,qBAAqB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUF,GAAG,CAACG,IAApB;;AAEA,MAAI;AACF;AACA,QAAIC,YAAJ;AAEA,UAAMC,OAAO,GAAGD,YAAY,GAAG,wBAAH,GAA+B,OAAMF,GAAI,gCAArE;AACA,WAAOD,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAC1BF,MAAAA,OAD0B;AAE1BD,MAAAA;AAF0B,KAArB,CAAP;AAID,GATD,CASE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAP,IAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACnBF,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACD,CAnBD;;AAqBAZ,MAAM,CAACkB,IAAP,CAAY,GAAZ,EAAiBZ,qBAAjB;AAEAa,MAAM,CAACC,OAAP,GAAiBpB,MAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "sourcesContent": [
        "const router = require('express').Router();\nconst { nibss } = require('innovation-sandbox');\n\nconst errors = require('../commons/errors/nibss-error');\nconst { NIBSSError } = errors;\n\nconst handleVerificationReq = async (req, res) => {\n // TODO validate the bvn input from the client\n const { bvn } = req.body;\n\n try {\n   // TODO use imported NIBSS SDK to verify the bvn input\n   let verification;\n\n   const message = verification ? 'verification completed' : `BVN ${bvn} could not be found / verified`;\n   return res.status(200).json({\n     message,\n     verification\n   });\n } catch (error) {\n   console.log(error);\n   res.status(500).json({\n     message: 'Unable to handle your verification request. Pls try again or contact support'\n   });\n }\n};\n\nrouter.post('/', handleVerificationReq);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614884796843
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/nibss-error.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/nibss-error.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/nibss-error.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/nibss-error.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/",
        "sourceFileName": "nibss-error.js"
      }
    },
    "ast": null,
    "code": "const APIError = require('./api-error');\n\nclass NIBSSError extends APIError {}\n\nmodule.exports = NIBSSError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5pYnNzLWVycm9yLmpzIl0sIm5hbWVzIjpbIkFQSUVycm9yIiwicmVxdWlyZSIsIk5JQlNTRXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxRQUFRLEdBQUdDLE9BQU8sQ0FBQyxhQUFELENBQXhCOztBQUVBLE1BQU1DLFVBQU4sU0FBeUJGLFFBQXpCLENBQWtDOztBQUVsQ0csTUFBTSxDQUFDQyxPQUFQLEdBQWlCRixVQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS96ZWVzb24vRG93bmxvYWRzL2Rldi9idm4tYXBpL2J2bi12ZXJpZmllci1zZXJ2ZXItYXBwLWpzL3NyYy9jb21tb25zL2Vycm9ycy8iLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUElFcnJvciA9IHJlcXVpcmUoJy4vYXBpLWVycm9yJyk7XG5cbmNsYXNzIE5JQlNTRXJyb3IgZXh0ZW5kcyBBUElFcnJvciB7fVxuXG5tb2R1bGUuZXhwb3J0cyA9IE5JQlNTRXJyb3I7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "nibss-error.js"
      ],
      "names": [
        "APIError",
        "require",
        "NIBSSError",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAxB;;AAEA,MAAMC,UAAN,SAAyBF,QAAzB,CAAkC;;AAElCG,MAAM,CAACC,OAAP,GAAiBF,UAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/",
      "sourcesContent": [
        "const APIError = require('./api-error');\n\nclass NIBSSError extends APIError {}\n\nmodule.exports = NIBSSError;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614884821155
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/api-error.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/api-error.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/api-error.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/api-error.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/",
        "sourceFileName": "api-error.js"
      }
    },
    "ast": null,
    "code": "class APIError extends Error {\n  constructor({\n    message,\n    status\n  }) {\n    super(message);\n    this.status = status;\n    this.message = message;\n    this.name = this.constructor.name;\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n}\n\nmodule.exports = APIError;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS1lcnJvci5qcyJdLCJuYW1lcyI6WyJBUElFcnJvciIsIkVycm9yIiwiY29uc3RydWN0b3IiLCJtZXNzYWdlIiwic3RhdHVzIiwibmFtZSIsImNhcHR1cmVTdGFja1RyYWNlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTUEsUUFBTixTQUF1QkMsS0FBdkIsQ0FBNkI7QUFDNUJDLEVBQUFBLFdBQVcsQ0FBQztBQUFFQyxJQUFBQSxPQUFGO0FBQVdDLElBQUFBO0FBQVgsR0FBRCxFQUFzQjtBQUMvQixVQUFNRCxPQUFOO0FBQ0EsU0FBS0MsTUFBTCxHQUFjQSxNQUFkO0FBQ0EsU0FBS0QsT0FBTCxHQUFlQSxPQUFmO0FBQ0EsU0FBS0UsSUFBTCxHQUFZLEtBQUtILFdBQUwsQ0FBaUJHLElBQTdCO0FBQ0FKLElBQUFBLEtBQUssQ0FBQ0ssaUJBQU4sQ0FBd0IsSUFBeEIsRUFBOEIsS0FBS0osV0FBbkM7QUFDRDs7QUFQMkI7O0FBVTdCSyxNQUFNLENBQUNDLE9BQVAsR0FBaUJSLFFBQWpCIiwic291cmNlUm9vdCI6Ii9ob21lL3plZXNvbi9Eb3dubG9hZHMvZGV2L2J2bi1hcGkvYnZuLXZlcmlmaWVyLXNlcnZlci1hcHAtanMvc3JjL2NvbW1vbnMvZXJyb3JzLyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIEFQSUVycm9yIGV4dGVuZHMgRXJyb3Ige1xuIGNvbnN0cnVjdG9yKHsgbWVzc2FnZSwgc3RhdHVzIH0pIHtcbiAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgdGhpcy5zdGF0dXMgPSBzdGF0dXM7XG4gICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgdGhpcy5uYW1lID0gdGhpcy5jb25zdHJ1Y3Rvci5uYW1lO1xuICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgdGhpcy5jb25zdHJ1Y3Rvcik7XG4gfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFQSUVycm9yXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "api-error.js"
      ],
      "names": [
        "APIError",
        "Error",
        "constructor",
        "message",
        "status",
        "name",
        "captureStackTrace",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,QAAN,SAAuBC,KAAvB,CAA6B;AAC5BC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,GAAD,EAAsB;AAC/B,UAAMD,OAAN;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKD,OAAL,GAAeA,OAAf;AACA,SAAKE,IAAL,GAAY,KAAKH,WAAL,CAAiBG,IAA7B;AACAJ,IAAAA,KAAK,CAACK,iBAAN,CAAwB,IAAxB,EAA8B,KAAKJ,WAAnC;AACD;;AAP2B;;AAU7BK,MAAM,CAACC,OAAP,GAAiBR,QAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/commons/errors/",
      "sourcesContent": [
        "class APIError extends Error {\n constructor({ message, status }) {\n   super(message);\n   this.status = status;\n   this.message = message;\n   this.name = this.constructor.name;\n   Error.captureStackTrace(this, this.constructor);\n }\n}\n\nmodule.exports = APIError\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614884899673
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verifyBVN.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verifyBVN.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verifyBVN.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/verifyBVN.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
        "sourceFileName": "verifyBVN.js"
      }
    },
    "ast": null,
    "code": "const express = require('express');\n\nconst router = express.Router();\n\nconst {\n  nibss\n} = require('innovation-sandbox');\n\nconst errors = require('../commons/errors/nibss-error');\n\nconst {\n  NIBSSError\n} = errors;\n\nconst generateNIBSSCredentials = async () => {\n  // use the sandbox key and NIBSS org code\n  // safely stored locally in our .env file\n  const credentials = await nibss.Bvnr.Reset({\n    sandbox_key: process.env.SANDBOX_KEY,\n    organisation_code: process.env.NIBSS_ORG_CODE\n  });\n  const {\n    status\n  } = credentials;\n\n  if (status && status >= 400) {\n    const message = 'Request likely has invalid Sandbox key and/or NIBSS ORG code';\n    console.error(`[HTTP:${status}] ${message}`);\n    throw new NIBSSError({\n      status,\n      message\n    });\n  }\n\n  return credentials;\n};\n\nconst getNIBSSCredentials = async () => {\n  // TODO call generateNIBSSCredentials as few times as possible\n  // and save certs in memory. E.g save to Redis\n  const certs = await generateNIBSSCredentials();\n  return certs;\n};\n\nconst verifyBVN = async data => {\n  const verification = await nibss.Bvnr.VerifySingleBVN({ ...data,\n    sandbox_key: process.env.SANDBOX_KEY,\n    organisation_code: process.env.NIBSS_ORG_CODE\n  });\n  return verification;\n};\n\nconst handleVerificationReq = async (req, res) => {\n  // TODO validate the bvn input from the client\n  const {\n    bvn\n  } = req.body;\n\n  try {\n    // TODO use imported NIBSS SDK to verify the bvn input\n    const {\n      ivkey,\n      aes_key: aesKey,\n      password\n    } = await getNIBSSCredentials();\n    const {\n      data: verification\n    } = await verifyBVN({\n      bvn,\n      ivkey,\n      password,\n      aes_key: aesKey\n    });\n    const message = verification ? 'verification completed' : `BVN ${bvn} could not be found / verified`;\n    return res.status(200).json({\n      message,\n      verification\n    });\n  } catch (error) {\n    console.log(error);\n    res.status(500).json({\n      message: 'Unable to handle your verification request. Pls try again or contact support'\n    });\n  }\n};\n\nrouter.post('/', handleVerificationReq);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInZlcmlmeUJWTi5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsInJvdXRlciIsIlJvdXRlciIsIm5pYnNzIiwiZXJyb3JzIiwiTklCU1NFcnJvciIsImdlbmVyYXRlTklCU1NDcmVkZW50aWFscyIsImNyZWRlbnRpYWxzIiwiQnZuciIsIlJlc2V0Iiwic2FuZGJveF9rZXkiLCJwcm9jZXNzIiwiZW52IiwiU0FOREJPWF9LRVkiLCJvcmdhbmlzYXRpb25fY29kZSIsIk5JQlNTX09SR19DT0RFIiwic3RhdHVzIiwibWVzc2FnZSIsImNvbnNvbGUiLCJlcnJvciIsImdldE5JQlNTQ3JlZGVudGlhbHMiLCJjZXJ0cyIsInZlcmlmeUJWTiIsImRhdGEiLCJ2ZXJpZmljYXRpb24iLCJWZXJpZnlTaW5nbGVCVk4iLCJoYW5kbGVWZXJpZmljYXRpb25SZXEiLCJyZXEiLCJyZXMiLCJidm4iLCJib2R5IiwiaXZrZXkiLCJhZXNfa2V5IiwiYWVzS2V5IiwicGFzc3dvcmQiLCJqc29uIiwibG9nIiwicG9zdCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUNBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFFQSxNQUFNO0FBQUVDLEVBQUFBO0FBQUYsSUFBWUgsT0FBTyxDQUFDLG9CQUFELENBQXpCOztBQUVBLE1BQU1JLE1BQU0sR0FBR0osT0FBTyxDQUFDLCtCQUFELENBQXRCOztBQUNBLE1BQU07QUFBRUssRUFBQUE7QUFBRixJQUFpQkQsTUFBdkI7O0FBRUEsTUFBTUUsd0JBQXdCLEdBQUcsWUFBWTtBQUM1QztBQUNBO0FBQ0EsUUFBTUMsV0FBVyxHQUFHLE1BQU1KLEtBQUssQ0FBQ0ssSUFBTixDQUFXQyxLQUFYLENBQWlCO0FBQ3pDQyxJQUFBQSxXQUFXLEVBQUVDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxXQURnQjtBQUV6Q0MsSUFBQUEsaUJBQWlCLEVBQUVILE9BQU8sQ0FBQ0MsR0FBUixDQUFZRztBQUZVLEdBQWpCLENBQTFCO0FBS0EsUUFBTTtBQUFFQyxJQUFBQTtBQUFGLE1BQWFULFdBQW5COztBQUNBLE1BQUlTLE1BQU0sSUFBSUEsTUFBTSxJQUFJLEdBQXhCLEVBQTZCO0FBQzNCLFVBQU1DLE9BQU8sR0FBRyw4REFBaEI7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWUsU0FBUUgsTUFBTyxLQUFJQyxPQUFRLEVBQTFDO0FBQ0EsVUFBTSxJQUFJWixVQUFKLENBQWU7QUFDbkJXLE1BQUFBLE1BRG1CO0FBRW5CQyxNQUFBQTtBQUZtQixLQUFmLENBQU47QUFJRDs7QUFFRCxTQUFPVixXQUFQO0FBQ0EsQ0FuQkQ7O0FBcUJBLE1BQU1hLG1CQUFtQixHQUFHLFlBQVk7QUFDdkM7QUFDQTtBQUNBLFFBQU1DLEtBQUssR0FBRyxNQUFNZix3QkFBd0IsRUFBNUM7QUFDQSxTQUFPZSxLQUFQO0FBQ0EsQ0FMRDs7QUFPQSxNQUFNQyxTQUFTLEdBQUcsTUFBT0MsSUFBUCxJQUFnQjtBQUNqQyxRQUFNQyxZQUFZLEdBQUcsTUFBTXJCLEtBQUssQ0FBQ0ssSUFBTixDQUFXaUIsZUFBWCxDQUEyQixFQUNwRCxHQUFHRixJQURpRDtBQUVwRGIsSUFBQUEsV0FBVyxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FGMkI7QUFHcERDLElBQUFBLGlCQUFpQixFQUFFSCxPQUFPLENBQUNDLEdBQVIsQ0FBWUc7QUFIcUIsR0FBM0IsQ0FBM0I7QUFLQSxTQUFPUyxZQUFQO0FBQ0EsQ0FQRDs7QUFTQSxNQUFNRSxxQkFBcUIsR0FBRyxPQUFPQyxHQUFQLEVBQVlDLEdBQVosS0FBb0I7QUFDakQ7QUFDQSxRQUFNO0FBQUVDLElBQUFBO0FBQUYsTUFBVUYsR0FBRyxDQUFDRyxJQUFwQjs7QUFFQSxNQUFJO0FBQ0Y7QUFDQSxVQUFNO0FBQUVDLE1BQUFBLEtBQUY7QUFBU0MsTUFBQUEsT0FBTyxFQUFFQyxNQUFsQjtBQUEwQkMsTUFBQUE7QUFBMUIsUUFBdUMsTUFBTWQsbUJBQW1CLEVBQXRFO0FBQ0gsVUFBTTtBQUFFRyxNQUFBQSxJQUFJLEVBQUVDO0FBQVIsUUFBeUIsTUFBTUYsU0FBUyxDQUFDO0FBQzdDTyxNQUFBQSxHQUQ2QztBQUU3Q0UsTUFBQUEsS0FGNkM7QUFHN0NHLE1BQUFBLFFBSDZDO0FBSTdDRixNQUFBQSxPQUFPLEVBQUVDO0FBSm9DLEtBQUQsQ0FBOUM7QUFPRyxVQUFNaEIsT0FBTyxHQUFHTyxZQUFZLEdBQUcsd0JBQUgsR0FBK0IsT0FBTUssR0FBSSxnQ0FBckU7QUFDQSxXQUFPRCxHQUFHLENBQUNaLE1BQUosQ0FBVyxHQUFYLEVBQWdCbUIsSUFBaEIsQ0FBcUI7QUFDMUJsQixNQUFBQSxPQUQwQjtBQUUxQk8sTUFBQUE7QUFGMEIsS0FBckIsQ0FBUDtBQUlELEdBZkQsQ0FlRSxPQUFPTCxLQUFQLEVBQWM7QUFDZEQsSUFBQUEsT0FBTyxDQUFDa0IsR0FBUixDQUFZakIsS0FBWjtBQUNBUyxJQUFBQSxHQUFHLENBQUNaLE1BQUosQ0FBVyxHQUFYLEVBQWdCbUIsSUFBaEIsQ0FBcUI7QUFDbkJsQixNQUFBQSxPQUFPLEVBQUU7QUFEVSxLQUFyQjtBQUdEO0FBQ0QsQ0F6QkQ7O0FBMkJBaEIsTUFBTSxDQUFDb0MsSUFBUCxDQUFZLEdBQVosRUFBaUJYLHFCQUFqQjtBQUVBWSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QyxNQUFqQiIsInNvdXJjZVJvb3QiOiIvaG9tZS96ZWVzb24vRG93bmxvYWRzL2Rldi9idm4tYXBpL2J2bi12ZXJpZmllci1zZXJ2ZXItYXBwLWpzL3NyYy9lbmRwb2ludHMvIiwic291cmNlc0NvbnRlbnQiOlsiXG5jb25zdCBleHByZXNzID0gcmVxdWlyZSgnZXhwcmVzcycpXG5jb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpXG5cbmNvbnN0IHsgbmlic3MgfSA9IHJlcXVpcmUoJ2lubm92YXRpb24tc2FuZGJveCcpO1xuXG5jb25zdCBlcnJvcnMgPSByZXF1aXJlKCcuLi9jb21tb25zL2Vycm9ycy9uaWJzcy1lcnJvcicpO1xuY29uc3QgeyBOSUJTU0Vycm9yIH0gPSBlcnJvcnM7XG5cbmNvbnN0IGdlbmVyYXRlTklCU1NDcmVkZW50aWFscyA9IGFzeW5jICgpID0+IHtcbiAvLyB1c2UgdGhlIHNhbmRib3gga2V5IGFuZCBOSUJTUyBvcmcgY29kZVxuIC8vIHNhZmVseSBzdG9yZWQgbG9jYWxseSBpbiBvdXIgLmVudiBmaWxlXG4gY29uc3QgY3JlZGVudGlhbHMgPSBhd2FpdCBuaWJzcy5Cdm5yLlJlc2V0KHtcbiAgIHNhbmRib3hfa2V5OiBwcm9jZXNzLmVudi5TQU5EQk9YX0tFWSxcbiAgIG9yZ2FuaXNhdGlvbl9jb2RlOiBwcm9jZXNzLmVudi5OSUJTU19PUkdfQ09ERVxuIH0pO1xuXG4gY29uc3QgeyBzdGF0dXMgfSA9IGNyZWRlbnRpYWxzO1xuIGlmIChzdGF0dXMgJiYgc3RhdHVzID49IDQwMCkge1xuICAgY29uc3QgbWVzc2FnZSA9ICdSZXF1ZXN0IGxpa2VseSBoYXMgaW52YWxpZCBTYW5kYm94IGtleSBhbmQvb3IgTklCU1MgT1JHIGNvZGUnO1xuICAgY29uc29sZS5lcnJvcihgW0hUVFA6JHtzdGF0dXN9XSAke21lc3NhZ2V9YCk7XG4gICB0aHJvdyBuZXcgTklCU1NFcnJvcih7XG4gICAgIHN0YXR1cyxcbiAgICAgbWVzc2FnZVxuICAgfSk7XG4gfVxuXG4gcmV0dXJuIGNyZWRlbnRpYWxzO1xufTtcblxuY29uc3QgZ2V0TklCU1NDcmVkZW50aWFscyA9IGFzeW5jICgpID0+IHtcbiAvLyBUT0RPIGNhbGwgZ2VuZXJhdGVOSUJTU0NyZWRlbnRpYWxzIGFzIGZldyB0aW1lcyBhcyBwb3NzaWJsZVxuIC8vIGFuZCBzYXZlIGNlcnRzIGluIG1lbW9yeS4gRS5nIHNhdmUgdG8gUmVkaXNcbiBjb25zdCBjZXJ0cyA9IGF3YWl0IGdlbmVyYXRlTklCU1NDcmVkZW50aWFscygpO1xuIHJldHVybiBjZXJ0cztcbn07XG5cbmNvbnN0IHZlcmlmeUJWTiA9IGFzeW5jIChkYXRhKSA9PiB7XG4gY29uc3QgdmVyaWZpY2F0aW9uID0gYXdhaXQgbmlic3MuQnZuci5WZXJpZnlTaW5nbGVCVk4oe1xuICAgLi4uZGF0YSxcbiAgIHNhbmRib3hfa2V5OiBwcm9jZXNzLmVudi5TQU5EQk9YX0tFWSxcbiAgIG9yZ2FuaXNhdGlvbl9jb2RlOiBwcm9jZXNzLmVudi5OSUJTU19PUkdfQ09ERVxuIH0pO1xuIHJldHVybiB2ZXJpZmljYXRpb247XG59O1xuXG5jb25zdCBoYW5kbGVWZXJpZmljYXRpb25SZXEgPSBhc3luYyAocmVxLCByZXMpID0+IHtcbiAvLyBUT0RPIHZhbGlkYXRlIHRoZSBidm4gaW5wdXQgZnJvbSB0aGUgY2xpZW50XG4gY29uc3QgeyBidm4gfSA9IHJlcS5ib2R5O1xuXG4gdHJ5IHtcbiAgIC8vIFRPRE8gdXNlIGltcG9ydGVkIE5JQlNTIFNESyB0byB2ZXJpZnkgdGhlIGJ2biBpbnB1dFxuICAgY29uc3QgeyBpdmtleSwgYWVzX2tleTogYWVzS2V5LCBwYXNzd29yZCB9ID0gYXdhaXQgZ2V0TklCU1NDcmVkZW50aWFscygpO1xuY29uc3QgeyBkYXRhOiB2ZXJpZmljYXRpb24gfSA9IGF3YWl0IHZlcmlmeUJWTih7XG4gIGJ2bixcbiAgaXZrZXksXG4gIHBhc3N3b3JkLFxuICBhZXNfa2V5OiBhZXNLZXlcbn0pO1xuXG4gICBjb25zdCBtZXNzYWdlID0gdmVyaWZpY2F0aW9uID8gJ3ZlcmlmaWNhdGlvbiBjb21wbGV0ZWQnIDogYEJWTiAke2J2bn0gY291bGQgbm90IGJlIGZvdW5kIC8gdmVyaWZpZWRgO1xuICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHtcbiAgICAgbWVzc2FnZSxcbiAgICAgdmVyaWZpY2F0aW9uXG4gICB9KTtcbiB9IGNhdGNoIChlcnJvcikge1xuICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgcmVzLnN0YXR1cyg1MDApLmpzb24oe1xuICAgICBtZXNzYWdlOiAnVW5hYmxlIHRvIGhhbmRsZSB5b3VyIHZlcmlmaWNhdGlvbiByZXF1ZXN0LiBQbHMgdHJ5IGFnYWluIG9yIGNvbnRhY3Qgc3VwcG9ydCdcbiAgIH0pO1xuIH1cbn07XG5cbnJvdXRlci5wb3N0KCcvJywgaGFuZGxlVmVyaWZpY2F0aW9uUmVxKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "verifyBVN.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "nibss",
        "errors",
        "NIBSSError",
        "generateNIBSSCredentials",
        "credentials",
        "Bvnr",
        "Reset",
        "sandbox_key",
        "process",
        "env",
        "SANDBOX_KEY",
        "organisation_code",
        "NIBSS_ORG_CODE",
        "status",
        "message",
        "console",
        "error",
        "getNIBSSCredentials",
        "certs",
        "verifyBVN",
        "data",
        "verification",
        "VerifySingleBVN",
        "handleVerificationReq",
        "req",
        "res",
        "bvn",
        "body",
        "ivkey",
        "aes_key",
        "aesKey",
        "password",
        "json",
        "log",
        "post",
        "module",
        "exports"
      ],
      "mappings": "AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAYH,OAAO,CAAC,oBAAD,CAAzB;;AAEA,MAAMI,MAAM,GAAGJ,OAAO,CAAC,+BAAD,CAAtB;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAiBD,MAAvB;;AAEA,MAAME,wBAAwB,GAAG,YAAY;AAC5C;AACA;AACA,QAAMC,WAAW,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAWC,KAAX,CAAiB;AACzCC,IAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,WADgB;AAEzCC,IAAAA,iBAAiB,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAFU,GAAjB,CAA1B;AAKA,QAAM;AAAEC,IAAAA;AAAF,MAAaT,WAAnB;;AACA,MAAIS,MAAM,IAAIA,MAAM,IAAI,GAAxB,EAA6B;AAC3B,UAAMC,OAAO,GAAG,8DAAhB;AACAC,IAAAA,OAAO,CAACC,KAAR,CAAe,SAAQH,MAAO,KAAIC,OAAQ,EAA1C;AACA,UAAM,IAAIZ,UAAJ,CAAe;AACnBW,MAAAA,MADmB;AAEnBC,MAAAA;AAFmB,KAAf,CAAN;AAID;;AAED,SAAOV,WAAP;AACA,CAnBD;;AAqBA,MAAMa,mBAAmB,GAAG,YAAY;AACvC;AACA;AACA,QAAMC,KAAK,GAAG,MAAMf,wBAAwB,EAA5C;AACA,SAAOe,KAAP;AACA,CALD;;AAOA,MAAMC,SAAS,GAAG,MAAOC,IAAP,IAAgB;AACjC,QAAMC,YAAY,GAAG,MAAMrB,KAAK,CAACK,IAAN,CAAWiB,eAAX,CAA2B,EACpD,GAAGF,IADiD;AAEpDb,IAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,WAF2B;AAGpDC,IAAAA,iBAAiB,EAAEH,OAAO,CAACC,GAAR,CAAYG;AAHqB,GAA3B,CAA3B;AAKA,SAAOS,YAAP;AACA,CAPD;;AASA,MAAME,qBAAqB,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AACjD;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAUF,GAAG,CAACG,IAApB;;AAEA,MAAI;AACF;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAO,EAAEC,MAAlB;AAA0BC,MAAAA;AAA1B,QAAuC,MAAMd,mBAAmB,EAAtE;AACH,UAAM;AAAEG,MAAAA,IAAI,EAAEC;AAAR,QAAyB,MAAMF,SAAS,CAAC;AAC7CO,MAAAA,GAD6C;AAE7CE,MAAAA,KAF6C;AAG7CG,MAAAA,QAH6C;AAI7CF,MAAAA,OAAO,EAAEC;AAJoC,KAAD,CAA9C;AAOG,UAAMhB,OAAO,GAAGO,YAAY,GAAG,wBAAH,GAA+B,OAAMK,GAAI,gCAArE;AACA,WAAOD,GAAG,CAACZ,MAAJ,CAAW,GAAX,EAAgBmB,IAAhB,CAAqB;AAC1BlB,MAAAA,OAD0B;AAE1BO,MAAAA;AAF0B,KAArB,CAAP;AAID,GAfD,CAeE,OAAOL,KAAP,EAAc;AACdD,IAAAA,OAAO,CAACkB,GAAR,CAAYjB,KAAZ;AACAS,IAAAA,GAAG,CAACZ,MAAJ,CAAW,GAAX,EAAgBmB,IAAhB,CAAqB;AACnBlB,MAAAA,OAAO,EAAE;AADU,KAArB;AAGD;AACD,CAzBD;;AA2BAhB,MAAM,CAACoC,IAAP,CAAY,GAAZ,EAAiBX,qBAAjB;AAEAY,MAAM,CAACC,OAAP,GAAiBtC,MAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "sourcesContent": [
        "\nconst express = require('express')\nconst router = express.Router()\n\nconst { nibss } = require('innovation-sandbox');\n\nconst errors = require('../commons/errors/nibss-error');\nconst { NIBSSError } = errors;\n\nconst generateNIBSSCredentials = async () => {\n // use the sandbox key and NIBSS org code\n // safely stored locally in our .env file\n const credentials = await nibss.Bvnr.Reset({\n   sandbox_key: process.env.SANDBOX_KEY,\n   organisation_code: process.env.NIBSS_ORG_CODE\n });\n\n const { status } = credentials;\n if (status && status >= 400) {\n   const message = 'Request likely has invalid Sandbox key and/or NIBSS ORG code';\n   console.error(`[HTTP:${status}] ${message}`);\n   throw new NIBSSError({\n     status,\n     message\n   });\n }\n\n return credentials;\n};\n\nconst getNIBSSCredentials = async () => {\n // TODO call generateNIBSSCredentials as few times as possible\n // and save certs in memory. E.g save to Redis\n const certs = await generateNIBSSCredentials();\n return certs;\n};\n\nconst verifyBVN = async (data) => {\n const verification = await nibss.Bvnr.VerifySingleBVN({\n   ...data,\n   sandbox_key: process.env.SANDBOX_KEY,\n   organisation_code: process.env.NIBSS_ORG_CODE\n });\n return verification;\n};\n\nconst handleVerificationReq = async (req, res) => {\n // TODO validate the bvn input from the client\n const { bvn } = req.body;\n\n try {\n   // TODO use imported NIBSS SDK to verify the bvn input\n   const { ivkey, aes_key: aesKey, password } = await getNIBSSCredentials();\nconst { data: verification } = await verifyBVN({\n  bvn,\n  ivkey,\n  password,\n  aes_key: aesKey\n});\n\n   const message = verification ? 'verification completed' : `BVN ${bvn} could not be found / verified`;\n   return res.status(200).json({\n     message,\n     verification\n   });\n } catch (error) {\n   console.log(error);\n   res.status(500).json({\n     message: 'Unable to handle your verification request. Pls try again or contact support'\n   });\n }\n};\n\nrouter.post('/', handleVerificationReq);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614887190921
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"filename\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/sendSMS.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/sendSMS.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/sendSMS.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/sendSMS.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
        "sourceFileName": "sendSMS.js"
      }
    },
    "ast": null,
    "code": "// SMS API\nconst express = require('express');\n\nconst router = express.Router();\n\nconst Request = require('request');\n\nconst {\n  nibss\n} = require('innovation-sandbox');\n\nconst {\n  atlabs\n} = require('innovation-sandbox');\n\nconst errors = require('../commons/errors/nibss-error');\n\nconst {\n  NIBSSError\n} = errors; // SMS Sender\n\nconst handleSMS = async (req, res) => {\n  const {\n    sms\n  } = req.body;\n  Request.post('https://sandboxapi.fsi.ng/atlabs/messaging', (err, result) => {\n    if (err) {\n      throw new NIBSSError({\n        status,\n        message\n      });\n    }\n\n    atlabs.SMS.SMSService({\n      sandbox_key: process.env.SANDBOX_KEY,\n      payload: {\n        to: sms,\n        from: \"FSI\",\n        message: \"Congrats, your request is successfully recieved, we will contact you soon\"\n      }\n    }).then(result => {\n      res.status(200).json({\n        result,\n        message: \"Message Sent\"\n      });\n    }).catch(err => {\n      res.json(err);\n    });\n  });\n};\n\nrouter.post('/', handleSMS);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlbmRTTVMuanMiXSwibmFtZXMiOlsiZXhwcmVzcyIsInJlcXVpcmUiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJSZXF1ZXN0Iiwibmlic3MiLCJhdGxhYnMiLCJlcnJvcnMiLCJOSUJTU0Vycm9yIiwiaGFuZGxlU01TIiwicmVxIiwicmVzIiwic21zIiwiYm9keSIsInBvc3QiLCJlcnIiLCJyZXN1bHQiLCJzdGF0dXMiLCJtZXNzYWdlIiwiU01TIiwiU01TU2VydmljZSIsInNhbmRib3hfa2V5IiwicHJvY2VzcyIsImVudiIsIlNBTkRCT1hfS0VZIiwicGF5bG9hZCIsInRvIiwiZnJvbSIsInRoZW4iLCJqc29uIiwiY2F0Y2giLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRixPQUFPLENBQUNHLE1BQVIsRUFBZjs7QUFDQSxNQUFNQyxPQUFPLEdBQUdILE9BQU8sQ0FBQyxTQUFELENBQXZCOztBQUNBLE1BQU07QUFBRUksRUFBQUE7QUFBRixJQUFZSixPQUFPLENBQUMsb0JBQUQsQ0FBekI7O0FBQ0EsTUFBTTtBQUFFSyxFQUFBQTtBQUFGLElBQWFMLE9BQU8sQ0FBQyxvQkFBRCxDQUExQjs7QUFFQSxNQUFNTSxNQUFNLEdBQUdOLE9BQU8sQ0FBQywrQkFBRCxDQUF0Qjs7QUFDQSxNQUFNO0FBQUVPLEVBQUFBO0FBQUYsSUFBaUJELE1BQXZCLEMsQ0FFQTs7QUFDQSxNQUFNRSxTQUFTLEdBQUcsT0FBT0MsR0FBUCxFQUFZQyxHQUFaLEtBQW9CO0FBQ2xDLFFBQU07QUFBRUMsSUFBQUE7QUFBRixNQUFVRixHQUFHLENBQUNHLElBQXBCO0FBQ0ZULEVBQUFBLE9BQU8sQ0FBQ1UsSUFBUixDQUNFLDRDQURGLEVBRUUsQ0FBQ0MsR0FBRCxFQUFNQyxNQUFOLEtBQWU7QUFDZixRQUFHRCxHQUFILEVBQU87QUFDTCxZQUFNLElBQUlQLFVBQUosQ0FBZTtBQUNuQlMsUUFBQUEsTUFEbUI7QUFFbkJDLFFBQUFBO0FBRm1CLE9BQWYsQ0FBTjtBQUlEOztBQUNEWixJQUFBQSxNQUFNLENBQUNhLEdBQVAsQ0FBV0MsVUFBWCxDQUFzQjtBQUNwQkMsTUFBQUEsV0FBVyxFQUFFQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsV0FETDtBQUVwQkMsTUFBQUEsT0FBTyxFQUFFO0FBQ1hDLFFBQUFBLEVBQUUsRUFBRWQsR0FETztBQUVYZSxRQUFBQSxJQUFJLEVBQUUsS0FGSztBQUdYVCxRQUFBQSxPQUFPLEVBQUU7QUFIRTtBQUZXLEtBQXRCLEVBT0dVLElBUEgsQ0FPUVosTUFBTSxJQUFJO0FBQ2hCTCxNQUFBQSxHQUFHLENBQUNNLE1BQUosQ0FBVyxHQUFYLEVBQWdCWSxJQUFoQixDQUFxQjtBQUNuQmIsUUFBQUEsTUFEbUI7QUFFbkJFLFFBQUFBLE9BQU8sRUFBRTtBQUZVLE9BQXJCO0FBSUQsS0FaRCxFQVlHWSxLQVpILENBWVNmLEdBQUcsSUFBSTtBQUNkSixNQUFBQSxHQUFHLENBQUNrQixJQUFKLENBQVNkLEdBQVQ7QUFDRCxLQWREO0FBZUQsR0F4QkQ7QUF5QkQsQ0EzQkQ7O0FBNkJBYixNQUFNLENBQUNZLElBQVAsQ0FBWSxHQUFaLEVBQWlCTCxTQUFqQjtBQUVBc0IsTUFBTSxDQUFDQyxPQUFQLEdBQWlCOUIsTUFBakIiLCJzb3VyY2VSb290IjoiL2hvbWUvemVlc29uL0Rvd25sb2Fkcy9kZXYvYnZuLWFwaS9idm4tdmVyaWZpZXItc2VydmVyLWFwcC1qcy9zcmMvZW5kcG9pbnRzLyIsInNvdXJjZXNDb250ZW50IjpbIi8vIFNNUyBBUElcbmNvbnN0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJylcbmNvbnN0IHJvdXRlciA9IGV4cHJlc3MuUm91dGVyKClcbmNvbnN0IFJlcXVlc3QgPSByZXF1aXJlKCdyZXF1ZXN0JylcbmNvbnN0IHsgbmlic3MgfSA9IHJlcXVpcmUoJ2lubm92YXRpb24tc2FuZGJveCcpO1xuY29uc3QgeyBhdGxhYnMgfSA9IHJlcXVpcmUoJ2lubm92YXRpb24tc2FuZGJveCcpXG5cbmNvbnN0IGVycm9ycyA9IHJlcXVpcmUoJy4uL2NvbW1vbnMvZXJyb3JzL25pYnNzLWVycm9yJyk7XG5jb25zdCB7IE5JQlNTRXJyb3IgfSA9IGVycm9ycztcblxuLy8gU01TIFNlbmRlclxuY29uc3QgaGFuZGxlU01TID0gYXN5bmMgKHJlcSwgcmVzKSA9PiB7XG4gICAgY29uc3QgeyBzbXMgfSA9IHJlcS5ib2R5O1xuICBSZXF1ZXN0LnBvc3QoXG4gICAgJ2h0dHBzOi8vc2FuZGJveGFwaS5mc2kubmcvYXRsYWJzL21lc3NhZ2luZycsXG4gICAgKGVyciwgcmVzdWx0KT0+e1xuICAgIGlmKGVycil7XG4gICAgICB0aHJvdyBuZXcgTklCU1NFcnJvcih7XG4gICAgICAgIHN0YXR1cyxcbiAgICAgICAgbWVzc2FnZVxuICAgICAgfSk7XG4gICAgfVxuICAgIGF0bGFicy5TTVMuU01TU2VydmljZSh7XG4gICAgICBzYW5kYm94X2tleTogcHJvY2Vzcy5lbnYuU0FOREJPWF9LRVksXG4gICAgICBwYXlsb2FkOiB7XG4gICAgdG86IHNtcyxcbiAgICBmcm9tOiBcIkZTSVwiLFxuICAgIG1lc3NhZ2U6IFwiQ29uZ3JhdHMsIHlvdXIgcmVxdWVzdCBpcyBzdWNjZXNzZnVsbHkgcmVjaWV2ZWQsIHdlIHdpbGwgY29udGFjdCB5b3Ugc29vblwiXG4gIH1cbiAgICB9KS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICByZXMuc3RhdHVzKDIwMCkuanNvbih7XG4gICAgICAgIHJlc3VsdCxcbiAgICAgICAgbWVzc2FnZTogXCJNZXNzYWdlIFNlbnRcIlxuICAgICAgfSlcbiAgICB9KS5jYXRjaChlcnIgPT4ge1xuICAgICAgcmVzLmpzb24oZXJyKVxuICAgIH0pXG4gIH0pXG59XG5cbnJvdXRlci5wb3N0KCcvJywgaGFuZGxlU01TKTtcblxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "sendSMS.js"
      ],
      "names": [
        "express",
        "require",
        "router",
        "Router",
        "Request",
        "nibss",
        "atlabs",
        "errors",
        "NIBSSError",
        "handleSMS",
        "req",
        "res",
        "sms",
        "body",
        "post",
        "err",
        "result",
        "status",
        "message",
        "SMS",
        "SMSService",
        "sandbox_key",
        "process",
        "env",
        "SANDBOX_KEY",
        "payload",
        "to",
        "from",
        "then",
        "json",
        "catch",
        "module",
        "exports"
      ],
      "mappings": "AAAA;AACA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,OAAO,GAAGH,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAM;AAAEI,EAAAA;AAAF,IAAYJ,OAAO,CAAC,oBAAD,CAAzB;;AACA,MAAM;AAAEK,EAAAA;AAAF,IAAaL,OAAO,CAAC,oBAAD,CAA1B;;AAEA,MAAMM,MAAM,GAAGN,OAAO,CAAC,+BAAD,CAAtB;;AACA,MAAM;AAAEO,EAAAA;AAAF,IAAiBD,MAAvB,C,CAEA;;AACA,MAAME,SAAS,GAAG,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAUF,GAAG,CAACG,IAApB;AACFT,EAAAA,OAAO,CAACU,IAAR,CACE,4CADF,EAEE,CAACC,GAAD,EAAMC,MAAN,KAAe;AACf,QAAGD,GAAH,EAAO;AACL,YAAM,IAAIP,UAAJ,CAAe;AACnBS,QAAAA,MADmB;AAEnBC,QAAAA;AAFmB,OAAf,CAAN;AAID;;AACDZ,IAAAA,MAAM,CAACa,GAAP,CAAWC,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,WADL;AAEpBC,MAAAA,OAAO,EAAE;AACXC,QAAAA,EAAE,EAAEd,GADO;AAEXe,QAAAA,IAAI,EAAE,KAFK;AAGXT,QAAAA,OAAO,EAAE;AAHE;AAFW,KAAtB,EAOGU,IAPH,CAOQZ,MAAM,IAAI;AAChBL,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBY,IAAhB,CAAqB;AACnBb,QAAAA,MADmB;AAEnBE,QAAAA,OAAO,EAAE;AAFU,OAArB;AAID,KAZD,EAYGY,KAZH,CAYSf,GAAG,IAAI;AACdJ,MAAAA,GAAG,CAACkB,IAAJ,CAASd,GAAT;AACD,KAdD;AAeD,GAxBD;AAyBD,CA3BD;;AA6BAb,MAAM,CAACY,IAAP,CAAY,GAAZ,EAAiBL,SAAjB;AAEAsB,MAAM,CAACC,OAAP,GAAiB9B,MAAjB",
      "sourceRoot": "/home/zeeson/Downloads/dev/bvn-api/bvn-verifier-server-app-js/src/endpoints/",
      "sourcesContent": [
        "// SMS API\nconst express = require('express')\nconst router = express.Router()\nconst Request = require('request')\nconst { nibss } = require('innovation-sandbox');\nconst { atlabs } = require('innovation-sandbox')\n\nconst errors = require('../commons/errors/nibss-error');\nconst { NIBSSError } = errors;\n\n// SMS Sender\nconst handleSMS = async (req, res) => {\n    const { sms } = req.body;\n  Request.post(\n    'https://sandboxapi.fsi.ng/atlabs/messaging',\n    (err, result)=>{\n    if(err){\n      throw new NIBSSError({\n        status,\n        message\n      });\n    }\n    atlabs.SMS.SMSService({\n      sandbox_key: process.env.SANDBOX_KEY,\n      payload: {\n    to: sms,\n    from: \"FSI\",\n    message: \"Congrats, your request is successfully recieved, we will contact you soon\"\n  }\n    }).then(result => {\n      res.status(200).json({\n        result,\n        message: \"Message Sent\"\n      })\n    }).catch(err => {\n      res.json(err)\n    })\n  })\n}\n\nrouter.post('/', handleSMS);\n\nmodule.exports = router;\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1614962004014
  }
}